const { createClient } = require('@sanity/client');

const client = createClient({
  projectId: 'zxcqyvgo',
  dataset: 'production',
  useCdn: false,
  apiVersion: '2023-05-03',
});

async function checkData() {
  try {
    console.log('üìä Sanity„Éá„Éº„Çø„Éô„Éº„Çπ„ÇíÁ¢∫Ë™ç‰∏≠...\n');
    
    // ÂÖ®„Éâ„Ç≠„É•„É°„É≥„Éà„ÅÆÁ¢∫Ë™ç
    const allDocs = await client.fetch('*[]{_type, _id, title}');
    console.log(`ÂÖ®„Éâ„Ç≠„É•„É°„É≥„ÉàÊï∞: ${allDocs.length}`);
    
    if (allDocs.length > 0) {
      console.log('\nüìÑ Ë¶ã„Å§„Åã„Å£„Åü„Éâ„Ç≠„É•„É°„É≥„Éà:');
      allDocs.forEach((doc, index) => {
        console.log(`  ${index + 1}. ${doc._type} - ${doc.title || doc._id}`);
      });
    } else {
      console.log('‚ö†Ô∏è  „Éâ„Ç≠„É•„É°„É≥„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü');
    }
    
    // „Éñ„É≠„Ç∞Ë®ò‰∫ã„ÅÆÁ¢∫Ë™ç
    console.log('\nüìù „Éñ„É≠„Ç∞Ë®ò‰∫ã„ÇíÁ¢∫Ë™ç‰∏≠...');
    const blogPosts = await client.fetch('*[_type == "blog"]{_id, title, slug, author, publishedAt, excerpt}');
    console.log(`„Éñ„É≠„Ç∞Ë®ò‰∫ãÊï∞: ${blogPosts.length}`);
    
    if (blogPosts.length > 0) {
      console.log('\nüìö Ë¶ã„Å§„Åã„Å£„Åü„Éñ„É≠„Ç∞Ë®ò‰∫ã:');
      blogPosts.forEach((post, index) => {
        console.log(`  ${index + 1}. ${post.title}`);
        console.log(`     - ID: ${post._id}`);
        console.log(`     - „Çπ„É©„ÉÉ„Ç∞: ${post.slug?.current || 'Êú™Ë®≠ÂÆö'}`);
        console.log(`     - ËëóËÄÖ: ${post.author || 'Êú™Ë®≠ÂÆö'}`);
        console.log(`     - ÂÖ¨ÈñãÊó•: ${post.publishedAt || 'Êú™Ë®≠ÂÆö'}`);
        console.log(`     - ÊäúÁ≤ã: ${post.excerpt || 'Êú™Ë®≠ÂÆö'}`);
        console.log('');
      });
    } else {
      console.log('‚ö†Ô∏è  „Éñ„É≠„Ç∞Ë®ò‰∫ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü');
    }
    
    // „Éâ„Ç≠„É•„É°„É≥„Éà„Çø„Ç§„ÉóÂà•„ÅÆÈõÜË®à
    console.log('\nüìà „Éâ„Ç≠„É•„É°„É≥„Éà„Çø„Ç§„ÉóÂà•ÈõÜË®à:');
    const typeCount = {};
    allDocs.forEach(doc => {
      typeCount[doc._type] = (typeCount[doc._type] || 0) + 1;
    });
    
    Object.entries(typeCount).forEach(([type, count]) => {
      console.log(`  ${type}: ${count}‰ª∂`);
    });
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

checkData();